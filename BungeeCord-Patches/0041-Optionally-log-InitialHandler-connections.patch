From 519419cfd04478fc029bcc932a5dc5b102410f2a Mon Sep 17 00:00:00 2001
From: Gabriele C <sgdc3.mail@gmail.com>
Date: Thu, 8 Feb 2018 19:10:52 +0100
Subject: [PATCH] Optionally log InitialHandler connections


diff --git a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
index 6141128b..e0baca9c 100644
--- a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
+++ b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
@@ -214,6 +214,13 @@ public interface ProxyConfig
     // Waterfall Options
     //
 
+    /**
+     * Whether we log InitialHandler connections
+     *
+     * @return whether we log InitialHandler connections
+     */
+    boolean isLogInitialHandlerConnections();
+
     /**
      * The supported versions
      *
diff --git a/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java b/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java
index ef44d334..4ff8da6d 100644
--- a/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java
+++ b/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java
@@ -9,6 +9,13 @@ import java.io.File;
 
 public class WaterfallConfiguration extends Configuration {
 
+    /**
+     * Whether we log InitialHandler connections
+     * <p>
+     * Default is true
+     */
+    private boolean logInitialHandlerConnections = true;
+
     /**
      * The supported versions displayed to the client
      * <p>Default is a comma separated list of supported versions. For example 1.8.x, 1.9.x, 1.10.x</p>
@@ -40,6 +47,7 @@ public class WaterfallConfiguration extends Configuration {
         super.load();
         YamlConfig config = new YamlConfig(new File("waterfall.yml"));
         config.load(false); // Load, but no permissions
+        logInitialHandlerConnections = config.getBoolean( "log_initial_handler_connections", logInitialHandlerConnections );
         gameVersion = config.getString("game_version", "").isEmpty() ? Joiner.on(", ").join(ProtocolConstants.SUPPORTED_VERSIONS) : config.getString("game_version", "");
         useNettyDnsResolver = config.getBoolean("use_netty_dns_resolver", useNettyDnsResolver);
         // Throttling options
@@ -47,6 +55,11 @@ public class WaterfallConfiguration extends Configuration {
         disableModernTabLimiter = config.getBoolean("disable_modern_tab_limiter", disableModernTabLimiter);
     }
 
+    @Override
+    public boolean isLogInitialHandlerConnections() {
+        return logInitialHandlerConnections;
+    }
+
     @Override
     public String getGameVersion() {
         return gameVersion;
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
index 935daa5d..ddc04fda 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
@@ -355,7 +355,10 @@ public class InitialHandler extends PacketHandler implements PendingConnection
                 break;
             case 2:
                 // Login
-                bungee.getLogger().log( Level.INFO, "{0} has connected", this );
+                if (BungeeCord.getInstance().getConfig().isLogInitialHandlerConnections() ) // Waterfall
+                {
+                    bungee.getLogger().log( Level.INFO, "{0} has connected", this );
+                }
                 thisState = State.USERNAME;
                 ch.setProtocol( Protocol.LOGIN );
 
-- 
2.38.1

